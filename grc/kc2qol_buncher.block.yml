id: kc2qol_buncher
label: Buncher
category: '[KC2QOL]'

templates:
  imports: import kc2qol
  make: kc2qol.buncher(${packet_len}, ${type.numpy})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
-   id: type
    label: Type
    dtype: enum
    options: [complex, float, int, byte]
    option_labels: [Complex, Float, Int, Byte]
    option_attributes:
        numpy: [numpy.complex64, numpy.float32, numpy.int32, numpy.uint8]
    hide: part
-   id: packet_len
    label: Packet Payload Length
    dtype: int
    default: 21690

#  Make one 'inputs' list entry per input. Sub-entries of dictionary:
#      * label (an identifier for the GUI)
#      * domain
#      * dtype
#      * vlen
#      * optional (set to 1 for optional inputs) 
inputs:
-   label: in
    domain: stream
    dtype: ${ type }

#  Make one 'outputs' list entry per output. Sub-entries of dictionary:
#      * label (an identifier for the GUI)
#      * dtype
#      * vlen
#      * optional (set to 1 for optional inputs) 
outputs:
-   label: out
    domain: stream
    dtype: ${ type }

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
